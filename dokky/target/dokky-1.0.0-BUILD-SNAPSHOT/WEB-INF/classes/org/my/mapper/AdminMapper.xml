<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- 마지막 업데이트 2022.06.13 -->
<mapper namespace="org.my.mapper.AdminMapper">

	  <resultMap id="memberMap" type="org.my.domain.common.MemberVO" >
		    <id property="userId" column="userId"/>
			    <result property="userId" column="userid"/>
			    <result property="userPw" column="userpw"/>
			    <result property="nickName" column="nickname"/>
			    <result property="bankName" column="bankName"/>
			    <result property="account" column="account"/>
			    <result property="regDate" column="regdate"/>
			    <result property="preLoginDate" column="preLoginDate"/>
			    <result property="accountNonLocked" column="accountNonLocked"/>
			    <result property="enabled" column="enabled"/>
		    <collection property="authList" resultMap="authMap"></collection> 
	  </resultMap>
	  
	  <resultMap id="authMap" type="org.my.domain.common.AuthVO" >
		   	<result property="userId" column="userid"/>
		   	<result property="auth" column="auth"/>
	  </resultMap>
		 
	<!-- 나의 정보 한줄 가져오기 -->
	<select id="getUserForm" resultMap="memberMap">
		 SELECT mem.userid
			  , nickname
			  , bankName
			  , account
			  , regdate
			  , preLoginDate
			  , auth
			  , accountNonLocked
			  , enabled
		 FROM 
		  	dk_member mem LEFT OUTER JOIN dk_member_auth auth on mem.userid = auth.userid 
		 WHERE mem.userid = #{userId} 
	</select>
	   
	  <sql id="criteria">
			<trim prefix="" suffix="and" prefixOverrides="OR">
				<foreach item='type' collection="typeArr">
					<trim prefix="OR">
						<choose>
							<when test="type == 'I'.toString()">
								userId like '%'||#{keyword}||'%'
							</when>
							<when test="type == 'N'.toString()">
							 	nickName like '%'||#{keyword}||'%'
							</when>
						</choose>
					</trim>
				</foreach>
			</trim>
	  </sql>
	
	  <select id="getUserList" resultType="org.my.domain.common.MemberVO">
		 <![CDATA[  
				select userId
					 , nickName 
				 from 
					( SELECT /*+INDEX_DESC(dk_member PK_DK_MEMBER) */ rownum rn
																	   , userid
																	   , nickname
				 FROM dk_member where ]]> <include refid ="criteria"></include> 
					
				  <![CDATA[  
				      rownum <= #{pageNum} * #{amount}
				    )
				  where rn > (#{pageNum} -1) * #{amount}   
				  ]]>
	  </select>

	  <select id="getMemberTotalCount" resultType="int">
			select count(*) from dk_member 
				 <trim prefix="where" suffix="" prefixOverrides="OR">
					<foreach item='type' collection="typeArr">
						<trim prefix="OR">
							<choose>
								<when test="type == 'I'.toString()">
									userId like '%'||#{keyword}||'%'
								</when>
								<when test="type == 'N'.toString()">
								 	nickName like '%'||#{keyword}||'%'
								</when>
							</choose>
						</trim>
					</foreach>
				</trim>				   
	  </select>
	
	  <select id="getCashRequestList" resultType="org.my.domain.common.CashVO"> 
			select cash_num
				 , regDate
				 , cashAmount
				 , specification
				 , userId
				 , nickName
				 , cashKind
		 	 from ( 
		 	 		select /*+INDEX_DESC(dk_cash pk_dk_cash) */ rownum rn
					 									   , cash_num
					 									   , regDate
					 									   , cashAmount
					 									   , specification
					 									   , userId
					 									   , nickName
					 									   , cashKind
					 from dk_cash 
					  where (specification = '미승인' or specification = '승인완료') and <![CDATA[ rownum <= #{pageNum} * #{amount} 
				  )
			   where rn > (#{pageNum} -1) * #{amount}  
			   ]]>
	  </select>
	
	  <select id="getCashListTotalCount" resultType="int">
		select count(*) from dk_cash where specification = '미승인' or specification = '승인완료'
	  </select>
	
	  <select id="getUserReportList" resultType="org.my.domain.common.ReportVO">
			select  report_num
				  , reportKind
				  , reportingId
				  , reportingNick
				  , reportedId
				  , reportedNick
				  , board_num
				  , reason
				  , regDate
		     from 
			     ( 
			     	select /*+INDEX_DESC(dk_report pk_dk_report) */ rownum rn
				 											   , report_num
															   , reportKind
															   , reportingId
															   , reportingNick
															   , reportedId
															   , reportedNick
															   , board_num
															   , reason
															   , regDate
					 from dk_report 
					   where <![CDATA[ rownum <= #{pageNum} * #{amount} 
				  )
			    where rn > (#{pageNum} -1) * #{amount}  
			]]>
	   </select>
	   
		<select id="getUserReportCount" resultType="int">
			select count(*) from dk_report
		</select>
	
		<update id="updateAccountNonLocked"> 
				update dk_member set accountNonLocked = #{accountNonLocked} WHERE USERID = #{userId}  
		</update>
		
		<update id="insertRole"> 
				insert into dk_member_auth(userId, auth) values ( #{userId}, #{role})
		</update>
	
		<delete id="deleteRole"> 
       			delete from dk_member_auth where userId = #{userId} and auth = #{role}
        </delete>
		
		<update id="updatePluscash">
		    update dk_member set cash = cash + #{cashAmount} where userId = #{userId}
		</update>
		
		<update id="updateMinuscash">
		    update dk_member set cash = cash - #{cashAmount} where userId = #{userId}
		</update>
		
		<update id="approveCash">
			update dk_cash set specification = '승인완료' where cash_num = #{cash_num} 
		</update>
	
</mapper>
