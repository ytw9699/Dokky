<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.my.mapper.ReplyMapper">

	<insert id="insertParentReply">
	
		<selectKey keyProperty="reply_num" order="BEFORE" resultType="long">
				select seq_dk_reply.nextval from dual
		</selectKey>
		
		insert into DK_REPLY (   
									  reply_num
									, board_num
									, reply_content
									, nickName
									, userId
									, group_num
									, order_step
									, depth
							 )
						values (  
									  #{reply_num}
									, #{board_num}
									, #{reply_content}
									, #{nickName}
									, #{userId}
									, seq_dk_reply.currval <!-- 댓글번호와 그룹번호가 같게해서 입력 -->
									, 0
									, 0
							   )
	</insert>
	
	<select id="getReplyNums" resultType="int">
		select reply_num from dk_reply where board_num = #{reply_num} order by group_num ASC, order_step ASC
	</select>
	
	<select id="selectReplylistToDecideStep" resultType="org.my.domain.reply.ReplyVO">
		  <![CDATA[ select * from dk_reply where group_num = #{group_num} and order_step > #{order_step} and depth <= #{depth} order by order_step asc   ]]>
	</select> 
	
	<!-- 그룹번호에 해당하는 가장 마지막줄의 step_order를 가져오는것 -->
	<select id="lastReplyStep" resultType="int">
		SELECT order_step FROM (SELECT order_step FROM dk_reply where group_num = #{group_num} order by order_step desc) WHERE ROWNUM = 1
	</select>
	
	<insert id="insertChildReply">
	
		<selectKey keyProperty="reply_num" order="BEFORE" resultType="long">
				select seq_dk_reply.nextval from dual
		</selectKey>
		
		insert into DK_REPLY (    
								  reply_num
								, board_num
								, reply_content
								, nickName
								, userId
								, group_num
								, order_step
								, depth
								, toUserId
								, toNickName
							 )
					values (   
							   #{reply_num}
							 , #{board_num}
							 , #{reply_content}
							 , #{nickName}
							 , #{userId}
							 , #{group_num}
							 , #{order_step}
							 , #{depth}
							 , #{toUserId}
							 , #{toNickName} 
						   )
	</insert>
	
	<update id="plusOrder_step">
	 	<![CDATA[update dk_reply set order_step = order_step+1 where group_num = #{group_num} and order_step >= #{order_step} ]]>
	</update>
	
	<select id="read" resultType="org.my.domain.reply.ReplyVO">
		select * from DK_REPLY where reply_num = #{reply_num}
	</select>
	
	<select id="getReplyCnt" resultType="int">
		<![CDATA[
		select count(reply_num) from DK_REPLY where board_num = #{board_num}
		]]>
	</select>
	
	<select id="readReplyListWithPaging" resultType="org.my.domain.reply.ReplyVO">
	  <![CDATA[
	    select reply_num
		     , board_num
		     , reply_content
		     , nickName
		     , userId
		     , replydate
		     , updatedate
		     , likeCnt 
		     , dislikeCnt
		     , money
		     , group_num
		     , order_step
		     , depth
		     , toNickName
		     , toUserId
	 	from 
	   (
	    select ROW_NUMBER() OVER(ORDER BY group_num ASC, order_step ASC) AS rn
																	      , reply_num
																	      , board_num
																	      , reply_content
																	      , nickName
																	      , userId
																	      , replydate
																	      , updatedate
																	      , likeCnt 
																	      , dislikeCnt
																	      , money
																	      , group_num
																	      , order_step
																	      , depth
																	      , toNickName
																	      , toUserId
		    from
		    	DK_REPLY  
		     where board_num = #{board_num} 
		 ) where rn <= #{cri.pageNum} * #{cri.amount} and rn > (#{cri.pageNum} -1) * #{cri.amount}
		]]>
	</select>
	
	 <!-- select reply_num, num, reply_content, nickName, userId, replydate, updatedate, likeCnt ,dislikeCnt,money,parent_num, order_step, reply_level
		 from 
		   (
		    select /*+INDEX(DK_REPLY idx_reply) */ 
		      rownum rn, reply_num, num, reply_content, nickName, userId, replydate, updatedate, likeCnt ,dislikeCnt,money, parent_num, order_step, reply_level
		    from DK_REPLY
		    where num = #{num}
		    and reply_num > 0
		    and rownum <= #{cri.pageNum} * #{cri.amount}
		   ) where rn > (#{cri.pageNum} -1) * #{cri.amount} -->
		   
	<update id="update">
		update DK_REPLY set reply_content = #{reply_content}, updatedate = sysdate 
		where reply_num = #{reply_num}
	</update>
		
	<select id="getBoardNum" resultType="long">
		select board_num from DK_REPLY where reply_num = #{reply_num}
	</select>
	
	<delete id="delete">
		delete from DK_REPLY where reply_num = #{reply_num}
	</delete>
	
	<!-- 내 캐시 히스토리 입력 -->
	<insert id="createMyCashHistory">
		insert into dk_cash (
							cash_num,
							cashKind,
							cashAmount,
							userId,
							specification,
							board_num,
							reply_num
							) values 
										(
											seq_dk_cash.nextval,
											'기부하기',
											#{money},
											#{userId},
											'댓글' ,
											#{board_num},
											#{reply_num}
										)
	</insert>
	
	<!-- 댓글 기부받는자 캐시 증가하기 -->
	<update id="plusReplyUserCash">
	    update dk_member set cash = cash + #{money} where userId = #{donatedId}
	</update> 
	
	<!-- 댓글 유저 캐시 히스토리 입력 -->
	<insert id="createReplyUserCashHistory">
		insert into dk_cash (
								cash_num,
								cashKind,
								cashAmount,
								userId,
								specification,
								board_num,
								reply_num
								) values 
											(
												seq_dk_cash.nextval, 
												'기부받기',
												#{money},
												#{donatedId},
												'댓글' ,
												#{board_num},
												#{reply_num}
											)
	</insert>
	
	<!-- 댓글의 기부금액 증가하기 -->
	<update id="plusReplyMoney"> 
	    update DK_REPLY set MONEY = MONEY + #{money} where reply_num = #{reply_num}
	</update> 
	
	<!-- 댓글의 기부금액 조회하기 -->
	<select id="getReplyMoney" resultType="String">
		select money from DK_REPLY where reply_num = #{reply_num}
	</select>
	
	<!-- 댓글 좋아요 버튼 누름 여부 체크-->	
	<select id="checkReplyLikeButton" resultType="int">
		select count(*) from dk_reply_like where userId = #{userId} and reply_num = #{reply_num}
	</select>
	
	<!--댓글 싫어요 버튼 누름 여부 체크 -->	 
	<select id="checkReplyDislikeButton" resultType="int">
		select count(*) from dk_reply_dislike where userId = #{userId} and reply_num = #{reply_num}
	</select>
	
	<!-- 댓글 좋아요 버튼 누르기 -->
	<insert id="pushReplyLikeButton">
	
		insert into dk_reply_like (	    userId
									  , reply_num
								  )
							values (   #{userId}
									  ,#{reply_num}
									)
	</insert>
	
	<!-- 댓글 싫어요 버튼 누르기 -->
	<insert id="pushReplyDislikeButton">
	
		insert into dk_reply_dislike (	    userId
									  	, reply_num
								 	 )	
								values (   #{userId}
									  	,#{reply_num}
										)
	</insert>
	
	<!-- 댓글 좋아요 카운트 +1 더하기 -->
	<update id="plusReplyLikeCount">
		update DK_REPLY set likeCnt = likeCnt + 1 where reply_num = #{reply_num}
	</update>
	
	<!-- 댓글 싫어요 카운트 -1 더하기 -->
	<update id="plusReplyDislikeCount">
		update DK_REPLY set dislikeCnt = dislikeCnt - 1 where reply_num = #{reply_num}
	</update>
	
	<!-- 댓글 좋아요 버튼 당기기(취소) -->
	<delete id="pullReplyLikeButton">
		delete from dk_reply_like where userId =  #{userId} and reply_num = #{reply_num}
	</delete>
	
	<!-- 댓글 싫어요 버튼 당기기(취소) -->
	<delete id="pullReplyDislikeButton">
		delete from dk_reply_dislike where userId =  #{userId} and reply_num = #{reply_num}
	</delete>
	
	<!-- 댓글 좋아요 카운트 빼기(-1) -->
	<update id="minusReplyLikeCount">
		update DK_REPLY set likeCnt = likeCnt - 1 where reply_num = #{reply_num}
	</update>
	
	<!-- 댓글 싫어요 카운트 빼기(+1) -->
	<update id="minusReplyDislikeCount">
		update DK_REPLY set dislikeCnt = dislikeCnt + 1 where reply_num = #{reply_num}
	</update>
	
	<!-- 댓글  좋아요 카운트 가져오기 -->
	<select id="getLikeCount" resultType="String">
		select likeCnt from DK_REPLY where reply_num = #{reply_num}
	</select>
	
	<!-- 댓글 싫어요 카운트 가져오기 -->
	<select id="getDislikeCount" resultType="String">
		select dislikeCnt from DK_REPLY where reply_num = #{reply_num}
	</select>
	
	<select id="getRecentReply_num" resultType="long">
		<![CDATA[
			select reply_num from DK_REPLY WHERE ROWNUM <= 1 order by reply_num desc 
		]]>	
	</select>

</mapper>
